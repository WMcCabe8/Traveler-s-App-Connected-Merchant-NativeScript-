{
    "name": "nativescript-phone",
    "version": "0.1.1",
    "description": "A phone NativeScript module for Android and iOS",
    "main": "phone-common.js",
    "repository": {
        "type": "git",
        "url": "https://github.com/msywensky/nativescript-phone.git"
    },
    "keywords": [
    "NativeScript"
  ],
    "author": {
        "name": "Mike Sywensky",
        "email": "michael.sywensky@gmail.com"
    },
    "license": {
        "type": "MIT",
        "url": "https://github.com/msywensky/nativescript-phone/blob/master/LICENSE"
    },
    "bugs": {
        "url": "https://github.com/msywensky/nativescript-phone/issues"
    },
    "homepage": "https://github.com/msywensky/nativescript-phone",
    "readme": "# NativeScript Phone\n\nA NativeScript module providing phone actions for Android and iOS.\n\n## Installation\n\nRun `npm install nativescript-phone --save` from your project's inner `app` directory:\n\n```\n.\n├── app\n│   ├── app <------------------------------ run npm install from here\n│   │   ├── app.css\n│   │   ├── app.js\n│   │   ├── bootstrap.js\n│   │   ├── main-page.js\n│   │   ├── main-page.xml\n│   │   ├── node_modules\n│   │   │   └── nativescript-phone <-- The install will place the module's code here\n│   │   │       └── ...\n│   │   └── package.json <----------------- The install will register “nativescript-phone” as a dependency here\n│   └── tns_modules\n│       └── ...\n└── platforms\n    ├── android\n    └── ios\n```\n\nAs is, using npm within NativeScript is still experimental, so it's possible that you'll run into some issues. A more complete solution is in the works, and you can check out [this issue](https://github.com/NativeScript/nativescript-cli/issues/362) for an update on its progress and to offer feedback.\n\nIf npm doesn't end up working for you, you can just copy and paste this repo's phone-common.js, phone.android.js, and phone.ios.js files into your app and reference them directly.\n\n### Android\n\nTo dial the phone without user interaction on Android your app must request permission to dial. To do so, add the following line to your project's AndroidManifest.xml:\n\n```xml\n<uses-permission android:name=\"android.permission.CALL_PHONE\" />\n```\n\n## Usage\n\nTo use the phone module you must first `require()` it from your project's `node_modules` directory:\n\n```js\nvar phone = require( \"./node_modules/nativescript-phone/phone\" );\n```\n\nAfter you have a reference to the module you can then call the availabl methods.\n\n### Methods\n#### dial: initiate a phone call\n##### Parameters\n* telNum: Phone number to dial.\n* prompt: Boolean to enable OS specific confirmation before dialing.\n\nFor example, the code below dials the number without showing the device specific confirmation prompt:\n\n```js\n// my-page.js\nvar phone = require( \"/path/to/node_modules/nativescript-phone\" );\nphone.dial(\"212-555-1234\");\n```\n#### sms: open the OS specific SMS app\n##### Parameters\n* smsNum: SMS number to use.\n* messageText: String to send.\n\nFor example, the code below opens the sms app for the provided number:\n\n```js\n// my-page.js\nvar phone = require( \"/path/to/node_modules/nativescript-phone\" );\nphone.sms(\"212-555-1234\",\"My message\");\n```\n",
    "readmeFilename": "README.md",
    "gitHead": "51576e039eddd8190748ff3846f0f4cca0be9e92",
    "_id": "nativescript-phone@0.1.1",
    "scripts": {},
    "_shasum": "bf95d4ed7f87c0fc0409810b246c94fcc141d3cd",
    "_from": "nativescript-phone@*",
    "_resolved": "file:../../Users/sywenm/Documents/Projects/nativescript-phone"
}